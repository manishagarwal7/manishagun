'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Manishagun.Data
    <Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="ManiShagunDB")> _
    Partial Public Class ManiShagunDBMLDataContext
        Inherits System.Data.Linq.DataContext

        Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub InsertMSGuestBook(instance As MSGuestBook)
        End Sub
        Partial Private Sub UpdateMSGuestBook(instance As MSGuestBook)
        End Sub
        Partial Private Sub DeleteMSGuestBook(instance As MSGuestBook)
        End Sub
#End Region

        Public Sub New()
            MyBase.New(Global.manishagunData.My.MySettings.Default.ManiShagunDBConnectionString, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As String)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As System.Data.IDbConnection)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
            MyBase.New(connection, mappingSource)
            OnCreated()
        End Sub

        Public ReadOnly Property MSGuestBooks() As System.Data.Linq.Table(Of MSGuestBook)
            Get
                Return Me.GetTable(Of MSGuestBook)()
            End Get
        End Property
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="manish.MSGuestBook")> _
    Partial Public Class MSGuestBook
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _GuestbookID As Integer

        Private _Name As String

        Private _Message As String

        Private _DateCreated As Date

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnGuestbookIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnGuestbookIDChanged()
        End Sub
        Partial Private Sub OnNameChanging(value As String)
        End Sub
        Partial Private Sub OnNameChanged()
        End Sub
        Partial Private Sub OnMessageChanging(value As String)
        End Sub
        Partial Private Sub OnMessageChanged()
        End Sub
        Partial Private Sub OnDateCreatedChanging(value As Date)
        End Sub
        Partial Private Sub OnDateCreatedChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GuestbookID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property GuestbookID() As Integer
            Get
                Return Me._GuestbookID
            End Get
            Set(value As Integer)
                If ((Me._GuestbookID = value) _
                            = False) Then
                    Me.OnGuestbookIDChanging(value)
                    Me.SendPropertyChanging()
                    Me._GuestbookID = value
                    Me.SendPropertyChanged("GuestbookID")
                    Me.OnGuestbookIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(150) NOT NULL", CanBeNull:=False)> _
        Public Property Name() As String
            Get
                Return Me._Name
            End Get
            Set(value As String)
                If (String.Equals(Me._Name, value) = False) Then
                    Me.OnNameChanging(value)
                    Me.SendPropertyChanging()
                    Me._Name = value
                    Me.SendPropertyChanged("Name")
                    Me.OnNameChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Message", DbType:="VarChar(500) NOT NULL", CanBeNull:=False)> _
        Public Property Message() As String
            Get
                Return Me._Message
            End Get
            Set(value As String)
                If (String.Equals(Me._Message, value) = False) Then
                    Me.OnMessageChanging(value)
                    Me.SendPropertyChanging()
                    Me._Message = value
                    Me.SendPropertyChanged("Message")
                    Me.OnMessageChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime NOT NULL")> _
        Public Property DateCreated() As Date
            Get
                Return Me._DateCreated
            End Get
            Set(value As Date)
                If ((Me._DateCreated = value) _
                            = False) Then
                    Me.OnDateCreatedChanging(value)
                    Me.SendPropertyChanging()
                    Me._DateCreated = value
                    Me.SendPropertyChanged("DateCreated")
                    Me.OnDateCreatedChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace

